name: Backend Build

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/backend.yml
      - backend/**

env:
  REMOTE: handystuff.net

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    defaults:
      run:
        working-directory: backend
    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: maven

      - name: maven build
        run: mvn verify

      - uses: redhat-actions/podman-login@v1
        if: github.ref_name == 'master'
        with:
          registry: ghcr.io/${{ github.actor }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - if: github.ref_name == 'master'
        run: >
          mvn compile jib:build \
              -Djib.from.image=amd64/eclipse-temurin:24-jre-noble \
              -Djib.to.image=ghcr.io/${{ github.repository }}:latest

      - uses: actions/delete-package-versions@v3
        if: github.ref_name == 'master'
        with:
          package-name: ${{ github.event.repository.name }}
          min-versions-to-keep: 3

  linter:
    name: linter
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: maven

      - run: mvn compile -am spotless:check modernizer:modernizer spotbugs:check pmd:check pmd:cpd-check

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: [ build ]
    if: github.ref_name == 'master'

    steps:
      - name: Configure SSH
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/deploy_key
          echo "${{ secrets.DEPLOY_SSH_CONFIG }}" > ~/.ssh/config
          echo "${{ secrets.DEPLOY_SSH_HOSTS }}" > ~/.ssh/known_hosts
          chmod 700 ~/.ssh && chmod 600 ~/.ssh/deploy_key

      - run: |
          ssh $REMOTE "docker pull ghcr.io/${{ github.repository }}:latest"
          ssh $REMOTE "docker restart niconicotagger"
